<%- include("../layouts/userNavBar.ejs") %>
<div class="container-xl px-4 mt-4">

    <nav class="nav nav-borders">
        <a class="nav-link" href="/Profile" target="__blank">Profile</a>
        <a class="nav-link" href="/Address" target="__blank">Address</a>
        <a class="nav-link" href="/Wallet" target="__blank">Wallet</a>
        <a class="nav-link" href="/Offer" target="__blank">Offer</a>
        <a class="nav-link active ms-0" href="/OrderHistory" target="__blank">Order History</a>
    </nav>
    <hr class="mt-0 mb-4">
    <div class="row">
        <div class="col-xl-4">
            <div class="card mb-4 mb-xl-0">
                <div class="card-header">Profile Picture</div>
                <div class="card-body text-center">
                    <img class="img-account-profile rounded-circle mb-2" src="http://bootdey.com/img/Content/avatar/avatar1.png" alt>
                    <br><br>
                    <div class="big-bold-text"><%= user.name %></div>
                </div>
            </div>
        </div>
        <div class="col-xl-8">
            <div class="card mb-4">
                <div class="card-header">Order Details Page</div>
                <div style="background-color: #ffffff; display: flex; align-items: stretch; justify-content: space-around; padding: 20px; flex-wrap: wrap;">
                    <div style="background-color: #ffffff; padding: 10px; flex: 1; text-align: center;">
                        <p><strong>Delivery Address</strong></p>
                        <% order.address.forEach(address => { %>
                            <address>
                                <%= address.name %><br>
                                <%= address.home_address %><br>
                                <%= address.city %>, <%= address.state %> <%= address.pincode %><br>
                                <%= address.country %><br>
                                Phone: <%= address.mobile %>
                            </address>
                        <% }) %>
                    </div>
                    <div style="padding: 10px; flex: 1; text-align: center;">
                        <p><strong>Order Details</strong></p>
                        <p>Order ID: <%= order.orderId %></p>
                        <p>Date: <%= order.currendDate.toDateString() %></p>
                        <p>Total Amount: <%= order.totalAmount %></p>
                        <p>Delivery Charge: <%= order.deliveryCharge %></p>
                    </div>
                    <div style="background-color: #ffffff; padding: 10px; flex: 1; text-align: center;">
                        <!-- <p><strong>Offer Details</strong></p> -->
                        <!-- <p>Offer: Get 20% off on next purchase</p> -->
                    </div>
                    <% if (order.orderStatus == "Delivered") { %>
                        <div class="orderStatus">
                            <div class="status">
                                <div class="status-circle Approved"></div>
                                <div class="line"></div>
                                <div class="status-label">Approved</div>
                            </div>
                            <div class="status">
                                <div class="status-circle shipped"></div>
                                <div class="line"></div>
                                <div class="status-label">Shipped</div>
                            </div>
                            <div class="status">
                                <div class="status-circle delivered"></div>
                                <div class="status-label">Delivered</div>
                            </div>
                        </div>
                    <% } else if (order.orderStatus == "Shipped") { %> 
                        <div class="orderStatus">
                            <div class="status">
                                <div class="status-circle Approved"></div>
                                <div class="line"></div>
                                <div class="status-label">Approved</div>
                            </div>
                            <div class="status">
                                <div class="status-circle shipped"></div>
                                <div class="status-label">Shipped</div>
                            </div>
                            <div class="status">
                                <div class="status-circle delivered"></div>
                                <div class="status-label">Delivered</div>
                            </div>
                        </div>
                    <% } else if (order.orderStatus == "Approved") { %> 
                        <div class="orderStatus">
                            <div class="status">
                                <div class="status-circle Approved"></div>
                                <div class="lineee"></div>
                                <div class="status-label">Approved</div>
                            </div>
                            <div class="status">
                                <div class="status-circle shipped"></div>
                                <div class="status-label">Shipped</div>
                            </div>
                            <div class="status">
                                <div class="status-circle delivered"></div>
                                <div class="status-label">Delivered</div>
                            </div>
                        </div>
                    <% }  else if (order.orderStatus == "Cancelled") { %> 
                        <div class="orderStatus">
                            <div class="status btn-danger">
                               <h4>You have cancelled this order</h4>
                            </div>
                        </div>
                    <% } else { %> 
                        <div class="orderStatus">
                            <div class="status btn-primary">
                               <h4>You have returned this order</h4>
                            </div>
                        </div>
                    <%}%>
                    <div class="cancelReturned">
                        <% if (order.orderStatus == "Approved") { %>
                            <div class="cancel">
                                <button class="btn btn-danger" onclick="CancelOrder('<%= order.orderId %>')">Cancel</button>
                            </div>
                        <% } else if (order.orderStatus == "Shipped") { %>
                            <div class="cancel">
                                <button class="btn btn-danger" onclick="CancelOrder('<%= order.orderId %>')">Cancel</button>
                            </div>
                        <% } else if (order.orderStatus == "Delivered") { %>
                            <!-- <div class="returned">
                                <button class="btn btn-danger" onclick="showReturnModal('<%= order.orderId %>')">Return</button>
                            </div>
                            <div class="invoice">
                                <button class="btn btn-primary" onclick="downloadInvoice('<%= order.orderId %>')">Download Invoice </button>
                            </div> -->
                            

                          
                                <div class="order-actions">
                                    <button class="btn btn-danger action-button" onclick="showReturnModal('<%= order.orderId %>')">Return</button>
                                    <button class="btn btn-primary action-button" onclick="downloadInvoice('<%= order.orderId %>')">Download Invoice</button>
                                </div>
                           
                            
                        <% } %>
                        
                    </div>
      
                    
                <div class="container mt-4" style="background-color: #eeecec; padding: 20px;">
                    <p><strong>Ordered Products</strong></p>
                    <% order.items.forEach(item => { %>
                        <div class="row border p-3 mb-3 bg-white">
                            <div class="col-md-3">
                                <img src="/productsImages/<%= item.productId.mainimage %>" alt="<%= item.productId.name %>" class="img-fluid" >
                            </div>
                            <div class="col-md-9">
                                <p><strong>Product Name:</strong> <%= item.productId.name %></p>
                                <p><strong>Quantity:</strong> <%= item.quantity %></p>
                                <p><strong>Price:</strong> <%= item.price %></p>
                            </div>
                            
                        </div>
                    <% }) %>
                </div>
              
            </div>
        </div>
    </div>
</div>

<!-- Return Reason Modal -->
<div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnModalLabel">Reasons to Return</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="returnForm">
                    <input type="hidden" name="orderId" id="modalOrderId">
                    <div class="form-group">
                        <label for="returnReason">Reason for Return:</label>
                        <select class="form-control" id="returnReason" name="returnReason">
                            <option value="">Select a reason</option>
                            <option value="Damaged product">Damaged product</option>
                            <option value="Wrong item delivered">Wrong item delivered</option>
                            <option value="Product not as described">Product not as described</option>
                            <option value="Better price available">Better price available</option>
                            <option value="No longer needed">No longer needed</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function downloadInvoice(orderId) {
        fetch('/downloadInvoice', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId: orderId }),
        })
        .then(response => response.blob())
        .then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `invoice_${orderId}.pdf`;
            document.body.appendChild(a);
            a.click();
            a.remove();
        })
        .catch(error => console.error('Error downloading invoice:', error));
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    function showReturnModal(orderId) {
        $('#modalOrderId').val(orderId);
        $('#returnModal').modal('show');
    }

    document.getElementById('returnForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent form from submitting normally

        const orderId = document.getElementById('modalOrderId').value;
        const returnReason = document.getElementById('returnReason').value;

        if (!returnReason) {
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'Please select a reason for return.',
            });
            return; // Do not proceed if validation fails
        }

        Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to submit the reason for return?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, submit it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Send the form data to the backend
                fetch('/submitReturnReason', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        returnReason: returnReason
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire(
                            'Submitted!',
                            'Your return reason has been submitted.',
                            'success'
                        ).then(() => {
                            window.location.href = '/OrderHistory'; // Redirect to orders page or another appropriate page
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            'There was a problem submitting your return reason.',
                            'error'
                        );
                    }
                })
                .catch(error => {
                    Swal.fire(
                        'Error!',
                        'There was a problem submitting your return reason.',
                        'error'
                    );
                });
            }
        });
    });
</script>
<script>
 

function CancelOrder(orderId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to cancel this order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/cancelOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId: orderId })
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      Swal.fire(
                          'Cancelled!',
                          data.message,
                          'success'
                      ).then(() => {
                          location.reload();
                      });
                  } else {
                      Swal.fire(
                          'Error!',
                          'There was a problem cancelling your order.',
                          'error'
                      );
                  }
              }).catch(error => {
                  Swal.fire(
                      'Error!',
                      'There was a problem cancelling your order.',
                      'error'
                  );
              });
        }
    });
}


</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<style type="text/css">
    /* General button styling */
.btn {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
}

/* Danger button styling */
.btn-danger {
    background-color: #dc3545;
    color: white;
    transition: background-color 0.3s ease;
}

.btn-danger:hover {
    background-color: #c82333;
}

/* Cancel container styling */
.cancel {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
}

/* Returned container styling */
.returned {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
}

/* Example additional styling for the containers */
.cancel button {
    width: 150px; /* Set button width */
}

.returned button {
    width: 150px; 
}

    .cancelReturned{
       
        background: rgb(255, 255, 255);
            height: 80px;
            width: 180px; 
            position: absolute;
            top: 325px;
            left: 30px;

    }
          .orderStatus {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-left: 210px;
            /* margin-right: auto; */
            width: 60%; /* Adjust width as needed */
            padding: 20px;
            background: #ffffff;
        }
        .status {
            text-align: center;
            position: relative;
        }
        .status-circle {
            background: green;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            margin-bottom: 5px;
        }
        .status-label {
            font-size: 14px;
            color: #5e5c5c;
        }
        .line {
            background: green;
            height: 6px;
            width: 140px; /* Adjust width as needed */
            position: absolute;
            top: 15px;
            left: 30px;
            /* z-index: -1; */
        }
        .lineee{
            background: green;
            height: 6px;
            width: 40px; /* Adjust width as needed */
            position: absolute;
            top: 15px;
            left: 30px;

        }
  
    .btn {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }
  
    .delete-btn {
        background-color: #f44336;
        color: white;
    }

    .delete-btn:hover {
        background-color: #da190b;
    }

    .img-account-profile {
        height: 10rem;
    }

    .rounded-circle {
        border-radius: 50% !important;
    }

    .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
    }

    .card .card-header {
        font-weight: 500;
    }

    .card-header:first-child {
        border-radius: 0.35rem 0.35rem 0 0;
    }

    .card-header {
        padding: 1rem 1.35rem;
        margin-bottom: 0;
        background-color: rgba(33, 40, 50, 0.03);
        border-bottom: 1px solid rgba(33, 40, 50, 0.125);
    }

    .form-control, .dataTable-input {
        display: block;
        width: 100%;
        padding: 0.875rem 1.125rem;
        font-size: 0.875rem;
        font-weight: 400;
        line-height: 1;
        color: #69707a;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #c5ccd6;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .nav-borders .nav-link.active {
        color: #0061f2;
        border-bottom-color: #0061f2;
    }

    .nav-borders .nav-link {
        color: #69707a;
        border-bottom-width: 0.125rem;
        border-bottom-style: solid;
        border-bottom-color: transparent;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0;
        padding-right: 0;
        margin-left: 1rem;
        margin-right: 1rem;
    }

    .big-bold-text {
        font-size: 2em;
        font-weight: bold;
        font-style: italic;
        color: #000000;
        margin-bottom: 1.5rem;
    }

    .edit-btn {
        background-color: #4CAF50;
        color: white;
    }

    .edit-btn:hover {
        background-color: #45a049;
    }

    .delete-btn {
        background-color: #f44336;
        color: white;
    }

    .delete-btn:hover {
        background-color: #da190b;
    }
</style>
<%- include("../layouts/userFooter.ejs") %>
