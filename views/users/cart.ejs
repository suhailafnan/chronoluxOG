

<%- include('../layouts/userNavBar.ejs') %>


<!-- Breadcrumb Section End -->

<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cartData.forEach(item => { %>
                                <tr data-product-id="<%= item.productId.id %>">
                                    <td class="product__cart__item">
                                        <div class="product__cart__item__pic">
                                            <img src="/productsImages/<%= item.productId.mainimage %>" alt="<%= item.productId.name %>" style="max-width: 70px; max-height: 70px;">
                                        </div>
                                        <div class="product__cart__item__text">
                                            <h6><%= item.productId.name %></h6>
                                            <h5 id="price_<%= item.productId.id %>">₹<%= item.productId.finalPrice %></h5>
                                        </div>
                                    </td>
                                    <td class="quantity__item">
                                        <div class="quantity">
                                            
                                       
                                               <div class="quantity__item">
                                                    <div class="quantity">
                                                        
                                                        <button class="decrement-btn" onclick="decrementQuantity('<%= item.productId._id %>')">-</button>
                                                        <input type="text" id="quantity_product" value="<%= item.quantity %>" min="1" max="<%= item.productId.Stock %>"
                                                         data-price="<%= item.productId.finalPrice%>" data-product-id="<%= item.productId._id %>" readonly style="width: 30px;">
                                                        <button class="increment-btn" onclick="incrementQuantity('<%= item.productId._id %>')">+</button>
                                                    </div> 
                                                </div>
                                            </div>
                                        </td>
                                        <td class="cart__price"  data-product-id="<%= item.productId._id %>" ><span class="total-price" > ₹<%= item.productId.finalPrice * item.quantity %></span></td> 
                                       
                                        
                                    <td class="cart__close">
                                        <a onclick="confirmRemoveProduct('<%= item.productId.id %>')"><i class="fa fa-close"></i></a>
                                    </td>
                                   
                                </tr>
                            <% }); %>
                        </tbody>

                        <!-- ======================== -->
                        
                    </table>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="continue__btn">
                            <a href="/shop">Continue Shopping</a>
                        </div>
                    </div>
                    
                </div>
            </div>
            <div class="col-lg-4">
               
                <div class="cart__total">
                    <h6>Cart total</h6>
                    <ul>
                        <li  >Total  <span id="totalAmount" style="font-weight: 500;">  </span></li>
                      
                        
                    </ul>
                    
                    <a href="#" class="primary-btn"  onclick="checkOut('<%= cartData._id %>')">Proceed to checkout</a>
                </div>
            </div>
        </div>
    </div>
</section>
<script>


    function confirmRemoveProduct(productId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to remove this product from your cart?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
            if (result.isConfirmed) {
                removeProduct(productId);
            }
        });
    }

    function removeProduct(productId) {
        console.log("Attempting to remove product with ID:", productId);
        
        fetch(`/removeProduct?ProductId=${productId}`, { method: 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Product removed from cart successfully.',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.reload();
                    });;
                 
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: data.error || 'Failed to remove product from cart.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred while removing the product from cart.',
                    showConfirmButton: false,
                    timer: 1500
                });
            });
        }

            function removeProduct(productId) {
        console.log("Attempting to remove product with ID:", productId);
        
        fetch(`/removeProduct?ProductId=${productId}`, { method: 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Product removed from cart successfully.',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.reload();
                    });
                 
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: data.error || 'Failed to remove product from cart.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred while removing the product from cart.',
                    showConfirmButton: false,
                    timer: 1500
                });
            });
    }

    //  quantity increment

function incrementQuantity(productId) {

const quantityInput = document.querySelector(`input[data-product-id='${productId}']`);
const currentQuantity = parseInt(quantityInput.value);
const maxQuantity = parseInt(quantityInput.getAttribute('max'));

if (currentQuantity < maxQuantity) {
  
  quantityInput.value = currentQuantity + 1;
  console.log(productId)
   updateSubtotal(productId);

 updateTotalAmount();
  sendUpdatedQuantity(productId , currentQuantity + 1);

} else {

  quantityInput.value = maxQuantity;
  updateSubtotal(productId);
  updateTotalAmount();

  Swal.fire({
    icon: 'warning',
    title: 'Maximum Stock Exceeded',
    text: 'The requested quantity exceeds the available stock.',
    confirmButtonText: 'OK'

  });
  sendUpdatedQuantity(productId, maxQuantity);
}
}


//  quantity decrement
function decrementQuantity(productId) {

const quantityInput = document.querySelector(`input[data-product-id='${productId}']`);
const currentQuantity = parseInt(quantityInput.value);

if (currentQuantity > 1) {
  quantityInput.value = currentQuantity - 1;
  updateSubtotal(productId);
  updateTotalAmount();
  sendUpdatedQuantity(productId, currentQuantity - 1);
}
}

//  update subtotal for a product

function updateSubtotal(productId) {

const quantityInput = document.querySelector(`input[data-product-id='${productId}']`);
const productQuantity = parseInt(quantityInput.value);
const productPriceElement = document.querySelector(`#price_${productId}`);
const productPrice = parseFloat(productPriceElement.textContent.replace('₹', '').trim());
const subtotalElement = document.querySelector(`.cart__price[data-product-id='${productId}']`);

const subtotal = productQuantity * productPrice;
console.log(subtotal)
subtotalElement.textContent = `₹ ${subtotal.toFixed(2)}`;

// updateTotalAmount();
}




// update total amount

function updateTotalAmount() {
const subtotalElements = document.querySelectorAll('.cart__price');
let totalAmount = 0;

subtotalElements.forEach(subtotalElement => {
const subtotal = parseFloat(subtotalElement.textContent.replace('₹', '').trim());
totalAmount += subtotal;
});

const totalAmountElement = document.querySelector('#totalAmount');
totalAmountElement.textContent = `₹ ${totalAmount}`;

}



//  send updated quantity data to backend

function sendUpdatedQuantity(productId, quantity) {
    console.log(productId, quantity)
fetch('/update-quantity', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({ productId, quantity })
})
  .then(response => {
    if (!response.ok) {
      throw new Error('Quantity update failed');
    }
    return response.json();
  })
  .then(data => {
    if (data.message === "Maximum stock exceeded") {
      Swal.fire({
        icon: 'warning',
        title: 'Maximum Stock Exceeded',
        text: 'The requested quantity exceeds the available stock.',
        confirmButtonText: 'OK'
      });
    }
  })
  .catch(error => {
    console.error('Error updating quantity:', error);
    Swal.fire({
      icon: 'error',
      title: 'Quantity Update Failed',
      text: 'Failed to update quantity. Please try again later.',
      confirmButtonText: 'OK'
    });
  });
}






function checkOut(cartId) {
        fetch('/checkQuantity', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ cartId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            window.location.href = '/checkOut';
          } else if (data.message === "Products is out of Stock, please remove product") {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message,
              showConfirmButton: true
            }).then(() => {
              setTimeout(() => {
                window.location.reload();
              }, 3000);
            });
          } else if (data.message === "No products in cart") {
            Swal.fire({
              icon: 'warning',
              title: 'Warning',
              text: data.message,
              showConfirmButton: true
            }).then(() => {
              setTimeout(() => {
                window.location.reload();
              }, 3000);
            });
          }
        })
        .catch(error => {
          console.log('Fetch error', error);
        });
      }



</script>

<script src="/path/to/your/javascript/file.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<%- include("../layouts/userFooter.ejs") %>